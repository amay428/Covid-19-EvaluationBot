#Import the neccessary libraries

import pyttsx3 #Convert text to speech
import datetime #For measuring the time
import speech_recognition as sr #To understand what the user is speaking
import webbrowser #To enable the webbrowser
import os #For accessing the os

engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)

count = 0 #To store the number of symptoms displayed
UserData = open("UserData.txt","w") #To send user data to a file

def speak(audio): 
    engine.say(audio)
    engine.runAndWait()

def wishMe(): #Greet the user according to the time of the day
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good morning ")
    elif hour>=12 and hour<4:
        speak("Good afternoon")
    else:
        speak("Good Evening")

    speak("I am your evaluation bot")
    
def takeCommand():
    # takes my command from microphone and gives text
    r =sr.Recognizer()
    with sr.Microphone() as source:
        print("listening...")
        r.pause_threshold = 1
        audio = r.listen(source)
    try:
        print("recognizing...")
        query = r.recognize_google(audio, language ='en-in')

    except Exception as e:
        print(e)
        speak("Sorry User, can you repeat that again?")
        return "None"
    return query

if __name__ == "__main__":

    wishMe() #Greets the user

    while True:
        speak("Do you have a fever?") #Check symptoms
        query = takeCommand().lower()
        if 'yes' in query:
            speak("ok")
            count = count+1
        else:
            speak("ok")

        speak("Do you feel tired?")
        query = takeCommand().lower()
        if 'yes' in query:
            speak("ok")
            count = count+1
        else:
            speak("ok")

        speak("Do you have dry cough?")
        query = takeCommand().lower()
        if 'yes' in query:
            speak("ok")
            count = count+1
        else:
            speak("ok")

        speak("Do you have shortage of breath or other respiratory problems?")
        query = takeCommand().lower()
        if 'yes' in query:
            speak("ok")
            count = count+1
        else:
            speak("ok")

        speak("Do you have  aches, pains, nasal congestion, runny nose, sore throat or diarrhea?")
        query = takeCommand().lower()
        if 'yes' in query:
            speak("ok")
            count = count+1
        else:
            speak("ok")



        if count==5:
            speak("You have a high risk of coronavirus, get yourself checked") #Gives out results based on the number of symptoms
            UserData.write("HighRisk")
            UserData.close()

            
        elif count==4:
            speak("You have a moderate risk of coronavirus, get yourself checked")
            UserData.write("ModerateRisk") #Sends Data to a file for records purposes
            UserData.close()
            
        elif count==3:
            speak("You have a low risk of coronavirus, stay home and avoid contact with others")
            UserData.write("LowRisk")
            UserData.close() #Closes the write function

        else:
            speak("You seem to be fine, but still keep yourself in quarantine")
            UserData.write("VeryLowRisk")
        
        speak("Say more info to visit w h os website or say nothing to end session") #Asks the user wether he/he wants to be redirected to WHOs website or exit
        query = takeCommand().lower()
     
        if 'more info' in query:
            webbrowser.open("who.int") #Redirect them to WHOs website
            exit() #Close the program
        else:
            speak("Closing program")
            exit()



